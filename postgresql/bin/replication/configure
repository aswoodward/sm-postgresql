#!/bin/sh

if [[ "${USER}" != "${service_user}" ]]
then
  log fail "'replication configure' may only be run as the PosgreSQL user '${service_user}'"
fi

if variable is empty master
then
  log error "The master hostname (dns resolvable) or IP address must be given as 'master X'"
elif variable is empty replica
then
  log error "The replica hostname (dns resolvable) or IP address must be given as 'replica X'"
fi

sm postgresql stop || true # if already stopped we're good to go.

template install "postgresql/recovery.conf" \
  to "${service_data_path}/recovery.conf" \
  mode 0600 \
  variables \
  host "${master}" \
  port "${port}" \
  user "${user}" \
  password "${password}" \
  data_path "${service_data_path}"

eval "ssh ${ssh_options} ${user}@${master} \"hostname;ssh ${ssh_options} ${USER}@${replica} hostname\""

files remove "${service_data_path}/wal/*"

eval "ssh ${ssh_options} ${user}@${master} \"psql -d postgres -c \\\"SELECT pg_start_backup('$(date)');\\\"\""

touch "${service_data_path}/wal/00000001.history"

eval "rsync -avPz --delete -e \"${ssh_options}\" --exclude .svn --exclude .git --exclude .hg --exclude pg_log --exclude 'recovery.*' --exclude postgresql.conf --exclude pg_xlog ${user}@${master}:${service_data_path}/ ${service_data_path}/ "

find "${service_data_path}/pg_xlog" -type f -exec rm -f {} \;

sm postgresql start

sleep 2

eval "ssh ${ssh_options} ${user}@${master} \\\"psql -d postgres -c \"SELECT pg_stop_backup();\\\"\""

if file exists "${sm_data_path}/backup_label"
then
  file remove "${sm_data_path}/backup_label"
fi

