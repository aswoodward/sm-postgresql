#!/bin/sh

pgpool_initialize()
{
  postgresql_version="$(${sm_path}/pkg/active/bin/psql -V | head -1 | awk '{print $NF}')"
  # package_version=$(pgpool_versions_latest)

  package_url="http://www.pgpool.net/download.php?f=pgpool-II-${package_version}.tar.gz"
  package_file="${package_url##*f=}"
  package_dir="${package_file%.tar.gz}"
}

#pgpool_configure()
#{
#  ./configure --prefix="${sm_path}/pkg/versions/pgpool/${package_version}" \
#    --sysconfdir="/etc" > configure.log 2>&1
#}

pgpool_versions()
{
  typeset -ga versions
  versions=($(
    curl -s "http://www.pgpool.net/mediawiki/index.php/Downloads" |
      awk '(/download.php/ && ! /-ha-/ && ! /Admin/){print}' |
      sed -e 's/.*download.php?f=//' -e 's/".*$//' |
      sort -r
  ))
}

pgpool_latest()
{
  pgpool_versions
  latest=${versions[1]}
}

pgpool_versions_latest(){
  pgpool_latest

  latest="${latest%.tar.gz}"
  latest="${latest#*II-}"
  log "${latest}"
}

pgpool_versions_available() {
  pgpool_versions

  for version in ${versions[@]}
  do
    version="${version%.tar.gz}"
    version="${version#*II-}"
    log "${version}"
  done
}

pgpool_version_url()
{
  typeset _version _path _current

  _version="$1" && shift || fail "A version number must be given."

  pgpool_versions

  for _path in ${versions[@]}
  do
    _current="${_path%.tar.gz}"
    _current="${version#*II-}"

    if [[ "${version}" == "${_current}" ]]
    then
      log "http://www.pgpool.net/download.php?f=${_path}"
      break
    fi
  done
}

pcp_md5()
{
  typeset _username _password _pg_md5
  if builtin command -v pg_md5 >/dev/null 2>&1
  then
    _pg_md5="$(builtin command -v pg_md5)"
  else
    log error "pg_md5 was not found in $PATH\nUsage: sm ${extension} pcp md5 {username} {password}"
  fi

  if (( $# < 2 ))
  then
    log error "Usage: sm ${extension} pcp md5 {username} {password}"
  else
    _username="$1"
    _password="$2"
    if ! shift 2
    then
      log error "Usage: sm ${extension} pcp md5 {username} {password}"
    fi
  fi

  log "${_username}:$("${_pg_md5}" "${_password}")"
}
